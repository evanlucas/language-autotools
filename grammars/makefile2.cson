scopeName: "source.makefile2"
fileTypes: [
	"GNUmakefile"
	"makefile"
	"Makefile"
	"OCamlMakefile"
	"make"
	"mk"
]
name: "Makefile"
repository:
	"escaped-char":
		name: "constant.character.escape.makefile"
		match: "\\\\."
	"variable-reference":
		begin: "\\$\\("
		end: "\\)"
		beginCaptures:
			"0":
				name: "keyword.operator.makefile"
		endCaptures:
			"0":
				name: "keyword.operator.makefile"
		contentName: "variable.other.makefile"
		patterns: [
			{
				include: "$self"
			}
			{
				name: "string.other.substitution.makefile"
				match: "(:)[a-zA-Z0-9_%.]+(=)[a-zA-Z0-9_%.]+"
				captures:
					"1":
						name: "keyword.operator.substitution.makefile"
					"2":
						name: "keyword.operator.substitution.makefile"
			}
			{
				name: "support.function.makefile"
				match: "(?<=\\$\\()(addprefix|addsuffix|basename|call|dir|error|filter|filter-out|findstring|firstword|foreach|join|notdir|origin|patsubst|shell|sort|strip|subst|suffix|warning|wildcard|word|words)\\b"
			}
		]
	"automatic-variable":
		name: "variable.language.makefile"
		match: "\\$([@%<?^+*]|\\([@*%<^?][DF]\\))"
	"shell-variable-reference":
		begin: "\\$\\{"
		end: "\\}"
		contentName: "variable.other.shell.makefile"
	"double-quoted-string":
		name: "string.quoted.double.makefile"
		begin: "\""
		end: "\""
		patterns: [
			{
				include: "#escaped-char"
			}
		]
	"single-quoted-string":
		name: "string.quoted.single.makefile"
		begin: "'"
		end: "'"
		patterns: [
			{
				include: "#escaped-char"
			}
		]
	"backtick-subshell":
		begin: "`"
		end: "`"
		name: "string.interpolated.backtick.makefile"
		patterns: [
			{
				include: "source.shell"
			}
			{
				include: "#variable-reference"
			}
		]
patterns: [
	{
		begin: "#"
		beginCaptures:
			"0":
				name: "punctuation.definition.comment.makefile"
		end: "$\\n?"
		name: "comment.line.number-sign.makefile"
		patterns: [
			{
				match: "(?<!\\\\)\\\\$\\n"
				name: "punctuation.separator.continuation.makefile"
			}
		]
	}
	{
		name: "meta.assignment.makefile"
		begin: "^([a-zA-Z_][a-zA-Z0-9_]*)\\s*([\\+\\?:]?=)"
		beginCaptures:
			"1":
				name: "variable.other.makefile"
			"2":
				name: "keyword.operator.assignment.makefile"
		end: "(?<!\\\\)\\n$"
		patterns: [
			{
				include: "#automatic-variable"
			}
			{
				include: "#variable-reference"
			}
			{
				include: "#shell-variable-reference"
			}
			{
				include: "#escaped-char"
			}
			{
				include: "#double-quoted-string"
			}
			{
				include: "#single-quoted-string"
			}
			{
				include: "#backtick-subshell"
			}
		]
	}
	{
		name: "meta.rule.makefile"
		begin: "^([^\\t\\:][^\\:]*)\\:"
		end: "^(?!\t)"
		beginCaptures:
			"1":
				name: "entity.name.function.rule.makefile"
		patterns: [
			{
				name: "meta.prerequisites.makefile"
				begin: "(?<=:)(?=.)"
				end: ";|\\n"
				patterns: [
					{
						include: "#variable-reference"
					}
				]
			}
			{
				include: "#automatic-variable"
			}
			{
				include: "#variable-reference"
			}
			{
				include: "source.shell"
			}
		]
	}
	{
		match: "^(\\-??include|if|ifeq|ifneq|ifdef|ifndef|else|endif|vpath|export|unexport|define|endef|override)\\b"
		name: "keyword.control.makefile"
	}
	{
		include: "#variable-reference"
	}
]
uuid: "FF1825E8-6B1C-11D9-B883-000D93589AF6"